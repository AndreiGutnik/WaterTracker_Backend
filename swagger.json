{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.2",
    "title": "WaterTracker Backend",
    "description": "Showing off WaterTracker Backend"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:5000" }],

  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "Users endpoints"
    },
    {
      "name": "WaterRate",
      "description": "Calculation of the daily rate of water consumption"
    },
    {
      "name": "Water",
      "description": "Editing information on consumed water"
    },
    {
      "name": "Today",
      "description": "Calculation of the amount of water consumed as a percentage"
    },
    {
      "name": "Month",
      "description": "Obtaining information on the amount of water consumed for the selected month"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Successful operation. User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email is use"
                }
              }
            }
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authorization",

        "parameters": [],

        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation. User is logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "User signed out",
            "content": {
              "application/json": {
                "example": {
                  "message": "User signed out"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Upload user avatar",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "User avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Avatar uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          },
          "404": {
            "description": "File not found",
            "content": {
              "application/json": {
                "example": {
                  "message": "File not found"
                }
              }
            }
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "User information",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/users": {
      "patch": {
        "tags": ["User"],
        "summary": "Updating user information",

        "parameters": [],

        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    },

    "/users/waterrate": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Updating the amount of water the user should consume",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Update successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "example": {
                  "message": "Error in request"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "user"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "format": "jwt"
            },

            "user": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                }
              }
            }
          }
        }
      },

      "CurrentUserResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "user"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "gender": {
              "type": "string",
              "description": "User's gender",
              "example": "male || female"
            },
            "waterRate": {
              "type": "number",
              "description": "User's gender",
              "example": 1500
            }
          }
        }
      },

      "AvatarUploadResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "avatarURL": {
              "type": "string",
              "description": "Avatar's name",
              "example": "http://res.cloudinary.com/de2jtjawf/image/upload/v1703364742/WaterTracker/avatars/zmsmi0zgrjwcxrlgxyzz.jpg"
            }
          }
        }
      },

      "UpdateRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "gender": {
            "type": "string",
            "description": "Gender's name",
            "example": "male"
          }
        }
      },

      "UpdateResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "User"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "gender": {
              "type": "string",
              "description": "Gender's name",
              "example": "male || female"
            }
          }
        }
      },

      "UpdateWaterRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "waterRate": {
            "type": "number",
            "description": "Water Rate",
            "example": 1500
          }
        }
      },

      "UpdateWaterResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "waterRate": {
              "type": "number",
              "description": "Water Rate",
              "example": 1500
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
